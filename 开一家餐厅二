<script>
        //餐厅类
        function Restaurant(obj) {
            this.cash = obj.cash;//number
            this.seats = obj.seats;//number
            this.staff = obj.staff;//array
        };
        Restaurant.prototype = {
            constructor: Restaurant,
            recruitStaff: function (s) {//雇员
                this.staff.push(s);
            },
            fireStaff: function (id) {//解雇
                this.staff = this.staff.filter(function (item, index, array) {
                    return item.id !== id;
                });
            }
        };

        //职员类
        function Staff(id, name, salary) {
            this.id = id;
            this.name = name;
            this.salary = salary;
        };
        Staff.prototype.constructor = Staff;
        Staff.prototype.work = function () {
        };

        //服务员类 继承自职员类
        function Waiter(id, name, salary) {
            if (typeof Waiter.instance === 'object') {
                return Waiter.instance;
            }
            Staff.call(this, id, name, salary);
            Waiter.instance = this;
        }
        Waiter.prototype = Object.create(Staff.prototype);
        Waiter.prototype = {
            constructor: Waiter,
            orderStart: function () {
                console.log('开始点菜');
            },
            work: function (data) {
                if (data instanceof Array) {
                    console.log("Waiter - 记录顾客点了：" + data[0].name);
                    new Chef().work(data);
                } else {
                    console.log("Waiter - serving");
                    newCustomer.eat();
                }
            }
        }

        //厨师类 继承自职员类
        function Chef(id, name, salary) {
            if (typeof Chef.instance === 'object') {
                return Chef.instance;
            }
            Staff.call(this, id, name, salary);
            Chef.instance = this;
        }
        Chef.prototype = Object.create(Staff.prototype);
        Chef.prototype = {
            constructor: Chef,
            work: function (dishes) {
                var _this = this;
                console.log("Cook - " + dishes[0].name + "正在准备...");
                setTimeout(function () {
                    console.log("Cook - " + dishes[0].name + "完成");
                    _this.callWaiter();
                }, 500);
            },
            callWaiter: function () {
                new Waiter().work();
            }
        }

        //顾客类
        function Customer(id, seat, mealList) {
            this.id = id;
            this.seat = seat;
            this.mealList = mealList;
        }
        Customer.prototype = {
            constructor: Customer,
            order: function () {
                var waiter = new Waiter();
                waiter.orderStart();
                customerOrder = [];
                customerOrder.push(order(menu));
                console.log('顾客'+ this.name +'点了' + customerOrder[0].name);
                waiter.work(customerOrder);
            },
            eat: function () {
                var _this = this;
                console.log("顾客 - eat");
                setTimeout(function () {
                    console.log("顾客 - 吃完了");
                    console.log("还有0"+parseInt(queue.length-1)+"的人在排队");
                    _this.leave();
                }, 500);
            },
            leave: function () {
                setTimeout(function () {
                    queue.splice(0, 1);
                    seat++;

                    queuing();
                }, 2000)
            }
        }

        var menu = [    //菜单
            { name: "可乐排骨", cost: 100, price: 130 },
            { name: "辣子鸡", cost: 50, price: 80 },
            { name: "虾", cost: 60, price: 80 },
            { name: "拍黄瓜", cost: 10, price: 15 },
            { name: "孜然牛肉", cost: 30, price: 40 }];
        var customerOrder = [];   //顾客点菜

        //菜品
        function Meal(name, cost, price) {
            this.name = name;
            this.cost = cost;
            this.price = price;
        }

        function order(menuData) {
            var dishes = menuData[parseInt(Math.random() * menuData.length)];
            return dishes;
        }

        //test
        var ifeRestaurant = new Restaurant({
            cash: 1000000,
            seats: 1,
            staff: []
            // staff: [{id: 1,name: "Sam",pay: 10000},{id: 2,name: "Tom",pay: 10000},{id: 3,name: "John",pay: 10000}]
        });

        var newChef = new Chef(1, "Tony", 10000);
        var newWaiter = new Waiter(2, "Sam", 8000);
        ifeRestaurant.recruitStaff(newChef);
        ifeRestaurant.recruitStaff(newWaiter);

        //console.log(ifeRestaurant.staff);
        // ifeRestaurant.fire(newCook);
        // console.log(ifeRestaurant.staff);

        var newCustomer, seat = ifeRestaurant.seats;
        var queue = ["Tracy", "John", "Mike", "Tiffany"];

        //顾客排队进店
        function queuing() {
            if (seat > 0) {
                if (queue.length > 0) {
                    console.log("————————————————————————————————————————");
                    newCustomer = new Customer(queue[0]);
                    seat--;
                    newCustomer.order();
                } else {
                    console.log("暂无客人排队");
                }
            }
        }
        //顾客加入排队
        function addCustomer(name) {
            queue.push(name);
            if (queue.length === 1) {
                queuing();
            }
        }

        queuing();
    </script>
